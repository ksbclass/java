package chap3;
/*
 * 비트 연산자 : &(AND),|(OR),^(XOR)
 */
public class OpEx5 {
	public static void main(String[] args) {
		System.out.println(6&3);
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * =============
		 * & : 00000010 : 2
		 */
		System.out.println(6|3);
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * =============
		 * | : 00000111 : 7
		 */
		System.out.println(6^3);
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * =============
		 * ^ : 00000101 : 5
		 */
		System.out.println(~10); //NOT ,0->1, 1->0
		/*
		 * 10 : 00001010
		 * ==============
		 * ~  : 11110101   
		 * 
		 * 부호비트 : 가장 왼쪽의 비트. 0(양수),1(음수)
		 *  => 음수를 2의 보수로 표현함.
		 *  2의 보수 : 1의 보수 + 1
		 *  
		 *  1110101 : ?의 2의 보수 표현. 보수를 계산하면 ?숫자를 알수 있음
		 *  
		 *  1110101 의 1의 보수
		 *   => 0001010
		 *   2의 보수 : 1의 보수 + 1
		 *    0001010 + 1 = 0001011 : 11
		 *    ?수 : 11
		 */
		
	}
}
